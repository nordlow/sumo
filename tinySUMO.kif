(subclass BinaryRelation Relation)
(subclass Relation Entity)
(subclass Physical Entity)
(subclass Class Entity)

(domain domain 1 Relation)
(domain domain 2 Integer)
(domain domain 3 Class)

(domain domainSubclass 1 Relation)
(domain domainSubclass 2 Integer)
(domain domainSubclass 3 Class)

(instance subclass BinaryRelation)
(instance subclass TransitiveRelation)
(domain subclass 1 Entity)
(domain subclass 2 Entity)

(domain instance 1 Entity)
(domain instance 2 Entity)
(instance instance BinaryRelation)

(documentation instance EnglishLanguage "A relation stating the
class membership of an individual.")
(format EnglishLanguage instance "%1 is an instance of %2")

(documentation subclass EnglishLanguage "A relation stating that
one class is more specific than another.")

(format EnglishLanguage subclass "%1 is a %2")
(termFormat EnglishLanguage instance "instance")
(termFormat EnglishLanguage subclass "subclass")

(=>
  (and
    (subclass ?B ?A)
    (subclass ?C ?B))
  (subclass ?C ?A))

(=>
  (and
    (subclass ?B ?A)
    (instance ?C ?B))
  (instance ?C ?A))

(subclass Human Physical)
(instance AbrahamLincoln Human)

(instance located BinaryRelation)
(instance located AntisymmetricRelation)
(domain located 1 Physical)
(domain located 2 Physical)

(subclass AntisymmetricRelation BinaryRelation)
(=>
    (instance ?REL AntisymmetricRelation)
    (forall (?INST1 ?INST2)
        (=>
            (and
                (?REL ?INST1 ?INST2)
                (?REL ?INST2 ?INST1))
            (equal ?INST1 ?INST2))))

;;-------------------------------------------------
;; Numbers and Arithmetic

(domain AdditionFn 1 Quantity)
(domain AdditionFn 2 Quantity)
(instance AdditionFn BinaryFunction)
(range AdditionFn Quantity)

(domain SubtractionFn 1 Quantity)
(domain SubtractionFn 2 Quantity)
(instance SubtractionFn BinaryFunction)
(range SubtractionFn Quantity)

(domain MultiplicationFn 1 Quantity)
(domain MultiplicationFn 2 Quantity)
(instance MultiplicationFn BinaryFunction)
(range MultiplicationFn Quantity)

(domain DivisionFn 1 Quantity)
(domain DivisionFn 2 Quantity)
(instance DivisionFn BinaryFunction)
(range DivisionFn Quantity)

(subclass BinaryFunction Function)
(subclass Function Relation)

(subclass Quantity Abstract)
(subclass Integer Quantity)

(domain MeasureFn 1 RealNumber)
(domain MeasureFn 2 UnitOfMeasure)
(instance MeasureFn BinaryFunction)
(range MeasureFn PhysicalQuantity)

(instance parents BinaryRelation)
(domain parents 1 Human)
(domain parents 2 Integer)
(=>
  (instance ?X Human)
  (parents ?X (AdditionFn 1 1)))

(parents AbrahamLincoln ?Y)

